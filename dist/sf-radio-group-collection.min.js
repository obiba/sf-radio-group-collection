angular.module("sfRadioGroupCollectionTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/radio-group-collection.html",'<div class="form-group"\n     ng-controller="RadioGroupCollectionController"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(),\n                \'has-success\': form.disableSuccessState !== true && hasSuccess(),\n                \'has-feedback\': form.feedback !== false }"\n     sf-field-model\n     schema-validate="form" >\n  <label ng-if="showTitle()">{{showTitle()}}</label>\n  <div ng-repeat="item in form.schema.items">\n    <div class="row" ng-if="!form.checkboxMode">\n      <div class="col-xs-6">\n        <span class="control-label" ng-bind-html="item.name"></span>\n      </div>\n      <div class="col-xs-6">\n        <label class="radio-inline" ng-repeat="transformedValue in transformedValues">\n          <input type="radio" ng-model="model[key][item.key]" name="{{key + \'.\' + item.key}}" id="inlineRadio{{$index}}" value="{{transformedValue.key}}"> {{transformedValue.caption}}\n        </label>\n      </div>\n    </div>\n\n    <div ng-if="form.checkboxMode">\n        <label class="checkbox-inline">\n          <input type="checkbox" ng-model="model[key][item.key]" name="{{key + \'.\' + item.key}}" id="checkbox{{$index}}" value="{{item.key}}">\n          <span ng-bind-html="item.name"></span>\n        </label>\n    </div>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfRadioGroupCollection",["schemaForm","sfRadioGroupCollectionTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,o,a,l){var n=function(o,a,n){if("object"===a.type&&"radioGroupCollection"===a.format){var t=e.stdFormObj(o,a,n);return t.key=n.path,t.type="radioGroupCollection",t.validationMessage=n.global.validationMessage||{},t.validationMessage.allItemsSelected=t.validationMessage.allItemsSelected||"All options must be selected.",n.lookup[l.stringify(n.path)]=t,t}};e.defaults.object.unshift(n),o.defineAddOn("bootstrapDecorator","radioGroupCollection","src/templates/radio-group-collection.html",a.stdBuilders)}]).controller("RadioGroupCollectionController",["$scope",function(e){function o(e){return!e||this.required!==!0||!this.schema.items||(this.checkboxMode?Object.keys(e).some(function(o){return e[o]}):this.schema.items.length===Object.keys(e).length)}e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0),e.$watch("form",function(){if(e.ngModel.$validators={allItemsSelected:o.bind(e.form)},Array.isArray(e.form.schema.values))e.transformedValues=e.form.schema.values;else{var a=e.form.schema.values||{};e.transformedValues=Object.keys(a).map(function(e){return{key:e,caption:a[e]}})}e.key=e.form.key[0],e.form.disableErrorState=e.form.hasOwnProperty("readonly")&&e.form.readonly})}]);